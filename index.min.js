"use strict";

var _interopRequire = function (obj) { return obj && obj.__esModule ? obj["default"] : obj; };

var _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _inherits = function (subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };

var _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };

var _react = require("react");

var React = _interopRequire(_react);

var PureComponent = _react.PureComponent;

var PropTypes = _interopRequire(require("prop-types"));

var Iframe = (function (_PureComponent) {
  var _class = function Iframe() {
    _classCallCheck(this, _class);

    if (_PureComponent != null) {
      _PureComponent.apply(this, arguments);
    }
  };

  _inherits(_class, _PureComponent);

  _createClass(_class, {
    render: {
      value: function render() {
        return React.createElement("iframe", {
          ref: "iframe",
          frameBorder: "0",
          src: this.props.url,
          allowFullScreen: this.props.allowFullScreen || false,
          allowTransparency: this.props.allowTransparency || false,
          style: Object.assign({}, {
            position: this.props.position || "absolute",
            display: this.props.display || "block",
            height: this.props.height || 500,
            width: this.props.width || 500
          }, this.props.styles || {}),
          height: this.props.height || 500,
          width: this.props.width || 500
        });
      }
    }
  });

  return _class;
})(PureComponent);
Iframe.propTypes = {
  url: PropTypes.string.isRequired,
  width: PropTypes.string,
  position: PropTypes.string,
  display: PropTypes.string,
  height: PropTypes.string,
  styles: PropTypes.object,
  allowTransparency: PropTypes.bool,
  allowFullScreen: PropTypes.bool };
module.exports = Iframe;